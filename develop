

object kike {
	var habilidad = 60;
	var grupo = "Tiene pero se desconoce"
		var albumes = [];
	method mostrarHabilidad(){
			if (grupo == "")
		{
		return habilidad +20	
		
		}
		else{
			return habilidad	
		}	
	}	
		method tocaEnGrupo() { return grupo != ""}
		method tienePalabra(palabra)= albumes.map({ album => album.filtrarCanciones(palabra)})
		method duracionObra()= albumes.map({ album => album.duracionDeAlbum()})
		method laPego()= albumes.all({ album => album.exitoso()})
}	


object soledad {
	var grupo = "";
	var habilidad = 55 ;
	var albumes = [laSole];
	method mostrarHabilidad()= habilidad
		method tocaEnGrupo() { return grupo != ""}
		method tienePalabra(palabra)= albumes.map({ album => album.filtrarCanciones(palabra)})
		method duracionObra()= albumes.map({ album => album.duracionDeAlbum()})
		method laPego()= albumes.all({ album => album.exitoso()})
}

object joaquin  {
	var grupo = "Pimpinela";
	var habilidad = 20;
	var albumes = [especialLaFamilia];
	method minimalista() = {return albumes.cancion().all()}

	method minimilista()=albumes.all({ album => album.sonTodasLasCancionesCortas()})
	
	method mostrarHabilidad(){
			if (grupo == "")
		{
		return habilidad +5	
		
		}
		else{
			return habilidad	
		}	
	}	
	
	method interpreta(cancion) {
				return cancion.duracion() > 300
	}
	method cobra(lugar){
			if (grupo == "")
		{
		return 100
		
		}
		else{
			return 50	
		}		
	}
	method tocaEnGrupo() { return grupo != ""}
	method tienePalabra(palabra)= albumes.map({ album => album.filtrarCanciones(palabra)})
	method duracionObra()= albumes.map({ album => album.duracionDeAlbum()})
	method laPego()= albumes.all({ album => album.exitoso()})
}

object lucia {
	var grupo = "Pimpinela";
	var habilidad = 70;
	var albumes = [];
	method mostrarHabilidad(){
		if (grupo == "")
		{
		return habilidad 	
		
		}
		else{
			return habilidad - 20	
		}
	}	
		
		method interpreta(cancion) {
			return cancion.letra().contains("familia")
			}	
	
	method cobra(lugar){
				if(lugar.capacidad() > 5000){return 500}
				else{return 400}
	}
	method minimilista()=albumes.all({ album => album.sonTodasLasCancionesCortas()})
	method tienePalabra(palabra)= albumes.map({ album => album.filtrarCanciones(palabra)})
	method duracionObra()= albumes.map({ album => album.duracionDeAlbum()})
	method laPego()= albumes.all({ album => album.exitoso()})
}

object luisAlberto{
	var albumes = [paraLosArboles,justCrisantemo];
	
	method mostrarHabilidad(guitarra){
		if (guitarra*8 < 100){
			return guitarra*8 
		}
		else{
			return 100
		}
		
	}
	method interpreta(cancion) {
				return true
					}
					
	method cobra(lugar){
		if(lugar.anio() < 2018)
		{if (lugar.mes() < 10){return 1000	}	else{return 1200}	}
		else{return 1200}
	}
	method minimilista()=albumes.all({ album => album.sonTodasLasCancionesCortas()})
	method tienePalabra(palabra)= albumes.map({ album => album.filtrarCanciones(palabra)})
	method duracionObra()= albumes.map({ album => album.duracionDeAlbum()})
	method laPego()= albumes.all({ album => album.exitoso()})
}


	
	

object cisne {
	
	const duracion = 312;
	const letra = "Hoy el viento se abrió quedó vacío el aire una vez más y el manantial brotó y nadie está aquí y puedo ver que solo estallan las hojas al brillar";
	method duracion(){return duracion}
	method letra(){return letra}
	method esCorta()=duracion < 180
	method tienePalabra(palabra)=letra.contains(palabra)
}

object laFamilia{
	const duracion = 264;
	const letra = "Quiero brindar por mi gente sencilla, por el amor brindo por la familia";
	method duracion(){return duracion}
	method letra(){return letra}
	method esCorta()= duracion < 180
	method tienePalabra(palabra)=letra.contains(palabra)
}

object eres{
	const duracion = 145;
	const letra = "Eres lo mejor que me pasó en la vida, no tengo duda, no habrá más nada después de ti. Eres lo que le dio brillo al día a día, y así será por siempre, no cambiará, hasta el final de mis días.";
	method duracion(){return duracion}
	method letra(){return letra}
	method esCorta()=duracion < 180
	method tienePalabra(palabra)=letra.contains(palabra)
}

object corazonAmericano{
	const duracion = 154;
	const letra = "Canta corazón, canta más alto, que tu pena al fin se va marchando, el nuevo milenio ha de encontrarnos, junto corazón, como soñamos.";
	method duracion(){return duracion}
	method letra(){return letra}
	method esCorta()=duracion < 180
	method tienePalabra(palabra)=letra.contains(palabra)
}

object almaDeDiamante{
	const duracion = 216;
	const letra = "Ven a mí con tu dulce luz alma de diamante. Y aunque el sol se nuble después sos alma de diamante. Cielo o piel silencio o verdad sos alma de diamante. Por eso ven así con la humanidad alma de diamante";
	method duracion(){return duracion}
	method letra(){return letra}
	method esCorta()=duracion < 180
	method tienePalabra(palabra)=letra.contains(palabra)
}
object crisantemo{
	const duracion = 175;
	const letra = "Tócame junto a esta pared, yo quede por aquí... cuando no hubo más luz... quiero mirar a través de mi piel... Crisantemo, que se abrió... encuentra el camino hacia el cielo";
	method duracion(){return duracion}
	method letra(){return letra}
	method esCorta()=duracion < 180
	method tienePalabra(palabra)= letra.contains(palabra)
	
}


object lunaPark {
	var dia = 20;
	var mes = 04;
	var anio= 2017;
	const capacidad = 9290;
	var musicos = [luisAlberto,joaquin,lucia];
	
	method dia(){return dia}
	method mes(){return mes}
	method anio(){return anio}
	
	method capacidad(){
		return capacidad}
	
	method costo(){return musicos.map({ musico => musico.cobra(self)}).sum()}
	
		
}

object laTrastienda {
	
	var musico = [luisAlberto,joaquin,lucia];
	var dia = 15;
	var mes = 11;
	var anio= 2017;
	method dia(){return dia}
	method mes(){return mes}
	method anio(){return anio}
	method capacidad(planta) {
		return 400 - 100*planta}
}

object guitarraGibsonSana {method habilidad(){return 15} }
object guitarraGibsonDaniada {method habilidad(){return 5} } 
object guitarraFender {method habilidad(){return 10} }


object especialLaFamilia{
	const dia = 17;
	const mes = 06;
	const anio= 1992;
	var copias = 100000;
	var vendio = 89000;
	const canciones = [laFamilia];
	method cancion()= canciones
	method sonTodasLasCancionesCortas() = canciones.all({ cancion => cancion.esCorta()})
	method filtrarCanciones(palabra)= canciones.filter({ cancion => cancion.tienePalabra(palabra)})
	method duracionDeAlbum() = canciones.sum({ cancion => cancion.duracion()})
	method cancionMasLarga() = canciones.max({ cancion => cancion.letra().size()})
	method exitoso() = vendio/copias >= 0.75
}
	
object laSole {
	const dia = 04;
	const mes = 02;
	const anio= 2005;
	var copias = 200000;
	var vendio = 130000;
	const canciones = [eres,corazonAmericano];
	method cancion()= canciones
	method sonTodasLasCancionesCortas() = canciones.all({ cancion => cancion.esCorta()})
	method filtrarCanciones(palabra)= canciones.filter({ cancion => cancion.tienePalabra(palabra)})
	method duracionDeAlbum() = canciones.sum({ cancion => cancion.duracion()})
	method cancionMasLarga() = canciones.max({ cancion => cancion.letra().size()})
	method exitoso() = vendio/copias >= 0.75
}

object paraLosArboles {
	const dia = 31;
	const mes = 03;
	const anio= 2003;
	var copias = 50000;
	var vendio = 49000;
	const canciones = [cisne,almaDeDiamante];
	method cancion()= canciones
	method sonTodasLasCancionesCortas() = canciones.all({ cancion => cancion.esCorta()})
	method filtrarCanciones(palabra)= canciones.filter({ cancion => cancion.tienePalabra(palabra)})
	method duracionDeAlbum() = canciones.sum({ cancion => cancion.duracion()})
	method cancionMasLarga() = canciones.max({ cancion => cancion.letra().size()})
	method exitoso() = vendio/copias >= 0.75
}

object justCrisantemo {
	const dia = 05;
	const mes = 12;
	const anio= 2007;
	var copias = 28000;
	var vendio = 27500;
	const canciones = [crisantemo];
	method cancion()= canciones
	method sonTodasLasCancionesCortas() = canciones.all({ cancion => cancion.esCorta()})
	method filtrarCanciones(palabra)= canciones.filter({ cancion => cancion.tienePalabra(palabra)})
	method duracionDeAlbum() = canciones.sum({ cancion => cancion.duracion()})
	method cancionMasLarga() = canciones.max({ cancion => cancion.letra().size()})
	method exitoso() = vendio/copias >= 0.75
}
